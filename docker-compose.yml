services:
  # load-balancer:
  # container_name: nginx
  # build: load-balancer/
  # ports:
  # - "443:443"
  # networks:
  # - frontend
  # restart: unless-stopped
  # depends_on:
  # - app

  app:
    container_name: app
    build:
      context: app/
      target: production
    ports:
      - '80:3000'
    networks:
      - frontend
      - backend
    volumes:
      - ./app/frontend/src/:/usr/app/frontend/src
    restart: always
    depends_on:
      - postgres
      # - engine

      # engine:
      # container_name: engine
      # build:
      # context: engine/
      # target: dev
      # expose:
      # - "5000"
      # networks:
      # - backend
      # restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: postgres
    expose:
      - "5432"
    ports:
      - '5432:5432'
    env_file:
      - ./app/backend/.env
    restart: always
    networks:
      - backend

  # test-db:
  # image: postgres:13
  # ports:
  # - 5435:5432
  # env_file:
  # - ./.env.test
  # networks:
  # - backend

  # pgadmin:
  #   links:
  #     - postgres:postgres
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - pgadmin:/root/.pgadmin
  #   env_file:
  #     - .env
  #   networks:
  #     - backend

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data

networks:
  frontend:
  backend:


volumes:
  postgres_data:
    driver: local
  redis:
    driver: local
  # pgadmin:
  #   driver: local
